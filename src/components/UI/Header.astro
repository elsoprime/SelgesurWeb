---
import Logo from '@/assets/images/Logo-Selgesur.png'
import {Image, Picture} from 'astro:assets'
import MainNav from './MainNav.astro'

// Importar todas las imágenes del slider
import Slider001 from '@/assets/images/Slider-001.png'
import Slider002 from '@/assets/images/Slider-002.png'
import Slider003 from '@/assets/images/Slider-003.png'
import Slider004 from '@/assets/images/Slider-004.png'
import Slider005 from '@/assets/images/Slider-005.png'

interface Props {
  subtitle: string // Subtítulo obligatorio
  bgImage?: string // Imagen individual opcional
  useSlideshow?: boolean // Flag para usar slideshow o imagen única 
}
const {subtitle, bgImage, useSlideshow = false} = Astro.props
// Array con las imágenes importadas - optimizado para lazy loading
const slideshowImages = [Slider001, Slider002, Slider003, Slider004, Slider005]
---

<header class='min-h-72 relative pb-72 flex items-center justify-center'>
  <!-- Slideshow de fondos optimizado -->
  <div class='absolute inset-0'>
   {useSlideshow ? (
    <!-- Slideshow automático con Picture elements -->
    <div class='absolute inset-0'>
      {slideshowImages.map((image, index) => (
        <div
          class={`slideshow-bg absolute inset-0 ${index === 0 ? 'active' : ''}`}
          data-slide-index={index}
        >
          <Picture
            src={image}
            alt=""
            formats={['avif', 'webp']}
            widths={[768, 1024, 1440, 1920]}
            sizes="100vw"
            loading={index === 0 ? 'eager' : 'lazy'}
            class="w-full h-full object-cover"
            style="position: absolute; inset: 0;"
          />
        </div>
      ))}
    </div>
  ) : bgImage ? (
    <!-- Imagen única optimizada -->
    <div class='absolute inset-0' aria-hidden='true'>
      <img
        src={bgImage}
        alt=""
        loading="eager"
        class="w-full h-full object-cover"
        style="position: absolute; inset: 0;"
      />
    </div>
  ) : null}
  </div>
  <div class='absolute inset-0 bg-gray-950/60' aria-hidden='true'></div>
  <!-- Logo y navegación -->
  <div class='relative max-w-7xl mx-auto py-5'>
    <div class='flex flex-col items-center lg:flex-row lg:justify-between'>
      <a class='cursor-pointer' href='/'>
          <Picture 
            src={Logo} 
            alt="Logo de Selgesur" 
            widths={[240, 288, 384]}
            sizes="(max-width: 768px) 384px, (max-width: 1024px) 240px, 288px"
            class='h-auto w-96 md:w-60 lg:w-72'
            formats={['avif', 'webp']}
            loading="eager"
            fetchpriority="high"
          />
      </a>
      <MainNav />
    </div>
        <h1 class='uppercase text-4xl font-black 
                  text-center p-6 mt-12 bg-gradient-to-r from-orange-200 to-white 
                    bg-clip-text text-transparent'> {subtitle}
        </h1>
  </div>
</header>

<!-- Estilos para el slideshow -->

<style>
  .slideshow-bg {
    opacity: 0;
    transition: opacity 1.2s ease-in-out;
    will-change: opacity;
    backface-visibility: hidden;
  }
  
  .slideshow-bg.active {
    opacity: 1;
  }

  /* Optimización para imágenes */
  .slideshow-bg picture,
  .slideshow-bg img {
    will-change: auto;
    backface-visibility: hidden;
  }

  /* Prevenir layout shift */
  .slideshow-bg::before {
    content: '';
    display: block;
    width: 100%;
    height: 100%;
    background-color: #1f2937; /* Color de placeholder */
    position: absolute;
    z-index: -1;
  }

  /* Efecto máquina de escribir */
  .typewriter {
    display: inline-block;
    overflow: hidden;
    white-space: nowrap;
    border-right: 2px solid #ffffff;
    animation: 
      typing 3.5s steps(40, end),
      blink-caret 0.75s step-end infinite;
    width: 0;
    animation-fill-mode: forwards;
  }

  /* Estilo para contenido largo */
  .typewriter-multiline {
    white-space: normal;
    line-height: 1.5;
    height: 0;
    animation: 
      typing-multiline 3.5s steps(40, end) forwards,
      blink-caret 0.75s step-end infinite;
  }

  @keyframes typing-multiline {
    from { 
      height: 0;
      width: 0;
    }
    to { 
      height: auto;
      width: 100%;
    }
  }

</style>

<!-- Script para manejar el slideshow -->

{useSlideshow && (
  <script>
    function initOptimizedSlideshow() {
      const slides = document.querySelectorAll('.slideshow-bg');
      let currentSlide = 0;
      let isIntersecting = false;

      // Limpiar intervalo existente si existe
      if ((window as any).slideshowInterval) {
        clearInterval((window as any).slideshowInterval);
      }

      if (slides.length > 1) {
        // Resetear todas las slides
        slides.forEach((slide, index) => {
          slide.classList.toggle('active', index === 0);
        });

        // Intersection Observer para optimizar rendimiento
        const observer = new IntersectionObserver((entries) => {
          entries.forEach((entry) => {
            isIntersecting = entry.isIntersecting;
            
            if (isIntersecting && !(window as any).slideshowInterval) {
              // Precargar próximas imágenes cuando el slideshow es visible
              const nextSlides = slides[1] && slides[1].querySelectorAll('img[loading="lazy"]');
              nextSlides?.forEach((img) => {
                (img as HTMLImageElement).loading = 'eager';
              });

              // Iniciar slideshow
              (window as any).slideshowInterval = setInterval(() => {
                if (isIntersecting) {
                  slides[currentSlide].classList.remove('active');
                  currentSlide = (currentSlide + 1) % slides.length;
                  slides[currentSlide].classList.add('active');
                }
              }, 4000); // Aumentado a 4s para mejor UX
            } else if (!isIntersecting && (window as any).slideshowInterval) {
              // Pausar slideshow cuando no es visible
              clearInterval((window as any).slideshowInterval);
              (window as any).slideshowInterval = null;
            }
          });
        }, {
          threshold: 0.3, // Activar cuando 30% del header es visible
          rootMargin: '50px 0px' // Margen adicional para precarga
        });

        // Observar el header
        const header = document.querySelector('header');
        if (header) {
          observer.observe(header);
        }

        // Limpiar observer al salir de la página
        document.addEventListener('astro:before-preparation', () => {
          observer.disconnect();
          if ((window as any).slideshowInterval) {
            clearInterval((window as any).slideshowInterval);
          }
        });
      }
    }

    // Ejecutar al cargar la página
    document.addEventListener('DOMContentLoaded', initOptimizedSlideshow);
    
    // Ejecutar después de transiciones de Astro
    document.addEventListener('astro:page-load', initOptimizedSlideshow);
  </script>
)}